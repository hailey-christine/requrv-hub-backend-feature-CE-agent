model Seat {
    id     String        @id @default(uuid()) @db.Uuid
    key_litellm String?
    billable_metric_code String?
    status SeatStatus @default(PENDING)

    startDate DateTime? @db.Timestamp() @default(now())
    endDate DateTime? @db.Timestamp()

    //RELATIONS
    subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade )
    subscriptionId String       @db.Uuid

    user   User? @relation(fields: [userId], references: [id])
    userId String?       @db.Uuid

    //AUTOGENERATED
    createdAt DateTime @default(now()) @db.Timestamp()
    updatedAt DateTime @updatedAt @db.Timestamp()
}

enum SeatStatus {
    PENDING
    ACTIVE
    SCHEDULED_FOR_TERMINATION
    TERMINATED
}