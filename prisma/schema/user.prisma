model User {
    id                 String   @id @default(uuid()) @db.Uuid
    name               String?
    surname            String?
    email              String   @unique
    password           String?
    api_key            String?  @unique
    role               UserRole @default(USER)
    confirmed          Boolean  @default(false)
    blocked            Boolean  @default(false)
    first_login        Boolean  @default(true)
    confirmation_token String?

    // OAuth provider fields
    auth_provider      AuthProvider @default(EMAIL)
    verified_email     Boolean     @default(false)

    // RELATIONS
    organization   Organization?  @relation(name: "users", fields: [organizationId], references: [id])
    organizationId String?        @db.Uuid
    owner          Organization?  @relation(name: "owner")
    privacy        PrivacyBlock[]
    termCondition  TermCondition?
    companyAreas   Area[]
    mediaUploaded  Media[]
    seats          Seat[]

    //AUTOGENERATED
    createdAt DateTime @default(now()) @db.Timestamp()
    updatedAt DateTime @updatedAt @db.Timestamp()
}

enum UserRole {
    SUPERADMIN
    COMPANY_ADMIN
    USER
}

enum AuthProvider {
    EMAIL
    GOOGLE
    APPLE
    GITHUB
}
