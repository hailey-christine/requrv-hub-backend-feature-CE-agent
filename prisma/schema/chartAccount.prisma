model ChartAccount {
    id          String             @id @default(uuid()) @db.Uuid
    code        String
    description String?
    type        TypeChartAccount?
    accountType AccountType?
    toConsider  Boolean  @default(false)

    // RELATIONS
    chartAccountCEEdebit ChartAccountCEE? @relation("chartAccountCEEdebit", fields: [chartAccountCEEdebitId], references: [id])
    chartAccountCEEdebitId String?             @db.Uuid
    chartAccountCEEcredit ChartAccountCEE? @relation("chartAccountCEEcredit", fields: [chartAccountCEEcreditId], references: [id])
    chartAccountCEEcreditId String?             @db.Uuid

    incomeStatementConversionTable IncomeStatementConversionTable? @relation(fields: [incomeStatementConversionTableId], references: [id])
    incomeStatementConversionTableId String? @db.Uuid

    valuesCostsRevenues ValuesCostsRevenues[]

    //AUTOGENERATED
    createdAt DateTime @default(now()) @db.Timestamp()
    updatedAt DateTime @updatedAt @db.Timestamp()
}

enum AccountType {
  BALANCE_SHEET
  INCOME_STATEMENT
  MEMORANDUM_ACCOUNT
}

//#region CHART_ACCOUNTS_TYPE

enum TypeChartAccount {
    COST
    REVENUE
    ACTIVE
    PASSIVE 
    ACTIVE_PASSIVE
}

//#endregion
